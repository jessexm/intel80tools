//
// +-------------------------------------------------------------------------+
// |   This file has been generated by The Interactive Disassembler (IDA)    |
// |           Copyright (c) 2017 Hex-Rays, <support@hex-rays.com>           |
// |                      License info: 48-B9BB-7C04-99                      |
// |                      Mark Ogden, Personal license                       |
// +-------------------------------------------------------------------------+
//
//
//      This file contains the user-defined type definitions.
//      To use it press F2 in IDA and enter the name of this file.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  Enums();              // enumerations
  Structures();         // structure types
  ApplyStrucTInfos();
	set_inf_attr(INF_LOW_OFF, 0x3680);
	set_inf_attr(INF_HIGH_OFF, 0x4F95);
}

static Enums_0(id) {

	id = add_enum(-1,"ISIS",0x2200000);
	add_enum_member(id,"$OPEN",	0,	-1);
	add_enum_member(id,"$CLOSE",	0X1,	-1);
	add_enum_member(id,"$DELETE",	0X2,	-1);
	add_enum_member(id,"$READ",	0X3,	-1);
	add_enum_member(id,"$WRITE",	0X4,	-1);
	add_enum_member(id,"$SEEK",	0X5,	-1);
	add_enum_member(id,"$LOAD",	0X6,	-1);
	add_enum_member(id,"$RENAME",	0X7,	-1);
	add_enum_member(id,"$CONSOL",	0X8,	-1);
	add_enum_member(id,"$EXIT",	0X9,	-1);
	add_enum_member(id,"$ATTRIB",	0XA,	-1);
	add_enum_member(id,"$RESCAN",	0XB,	-1);
	add_enum_member(id,"$ERROR",	0XC,	-1);
	add_enum_member(id,"$WHOCON",	0XD,	-1);
	add_enum_member(id,"$SPATH",	0XE,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("_3acf_t");
	id = get_struc_id("_3aec_t");
	id = get_struc_id("_3b3d_t");
	id = get_struc_id("_3bb7_t");
	id = get_struc_id("_3bec_t");
	id = get_struc_id("_3cad_t");
	id = get_struc_id("_492b_t");
	id = get_struc_id("_4a35_t");
	id = get_struc_id("_4a58_t");
	id = get_struc_id("_4abb_t");
	id = get_struc_id("_4ae3_t");
	id = get_struc_id("_4b07_t");
	id = get_struc_id("errstr_t");
	id = get_struc_id("_4b2b_t");
	id = get_struc_id("_4b4c_t");
	id = get_struc_id("_3c86_t");
	id = get_struc_id("_3cf5_t");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"_3acf_t",0);
	id = add_struc(-1,"_3aec_t",0);
	id = add_struc(-1,"_3b3d_t",0);
	id = add_struc(-1,"_3bb7_t",0);
	id = add_struc(-1,"_3bec_t",0);
	id = add_struc(-1,"_3cad_t",0);
	id = add_struc(-1,"_492b_t",0);
	id = add_struc(-1,"_4a35_t",0);
	id = add_struc(-1,"_4a58_t",0);
	id = add_struc(-1,"_4abb_t",0);
	id = add_struc(-1,"_4ae3_t",0);
	id = add_struc(-1,"_4b07_t",0);
	id = add_struc(-1,"errstr_t",0);
	id = add_struc(-1,"_4b2b_t",0);
	id = add_struc(-1,"_4b4c_t",0);
	id = add_struc(-1,"_3c86_t",0);
	id = add_struc(-1,"_3cf5_t",0);
	
	id = get_struc_id("_3acf_t");
	mid = add_struc_member(id,"argbc",	0,	0x10000400,	-1,	2);
	set_member_cmt(id,	0,	"--END--",	0);
	
	id = get_struc_id("_3aec_t");
	mid = add_struc_member(id,"argbc",	0,	0x10000400,	-1,	2);
	set_member_cmt(id,	0,	"--END--",	0);
	
	id = get_struc_id("_3b3d_t");
	mid = add_struc_member(id,"arg1w",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"argbc",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"arge",	0X4,	0x000400,	-1,	1);
	set_member_cmt(id,	0X4,	"--END--",	0);
	
	id = get_struc_id("_3bb7_t");
	mid = add_struc_member(id,"argbc",	0,	0x10000400,	-1,	2);
	set_member_cmt(id,	0,	"--END--",	0);
	
	id = get_struc_id("_3bec_t");
	mid = add_struc_member(id,"arg1w",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"arg2b",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"arg3b",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"argbc",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"arge",	0X6,	0x000400,	-1,	1);
	set_member_cmt(id,	0X6,	"--END--",	0);
	
	id = get_struc_id("_3cad_t");
	mid = add_struc_member(id,"arg1w",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"argbc",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"arge",	0X4,	0x000400,	-1,	1);
	set_member_cmt(id,	0X4,	"--END--",	0);
	
	id = get_struc_id("_492b_t");
	mid = add_struc_member(id,"argbc",	0,	0x10000400,	-1,	2);
	set_member_cmt(id,	0,	"--END--",	0);
	
	id = get_struc_id("_4a35_t");
	mid = add_struc_member(id,"argc",	0,	0x000400,	-1,	1);
	set_member_cmt(id,	0,	"--END--",	0);
	
	id = get_struc_id("_4a58_t");
	mid = add_struc_member(id,"argbc",	0,	0x10000400,	-1,	2);
	set_member_cmt(id,	0,	"--END--",	0);
	
	id = get_struc_id("_4abb_t");
	mid = add_struc_member(id,"argbc",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"argde",	0X2,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X2,	"--END--",	0);
	
	id = get_struc_id("_4ae3_t");
	mid = add_struc_member(id,"arg1w",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"arg2w",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"arg3w",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"argbc",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"argde",	0X8,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X8,	"--END--",	0);
	
	id = get_struc_id("_4b07_t");
	mid = add_struc_member(id,"arg1w",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"arg2w",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"arg3w",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"argbc",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"argde",	0X8,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X8,	"--END--",	0);
	
	id = get_struc_id("errstr_t");
	mid = add_struc_member(id,"code",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"str",	0X2,	0x50000400,	0,	0);
	
	id = get_struc_id("_4b2b_t");
	mid = add_struc_member(id,"arg1w",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"arg2w",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"argbc",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"argde",	0X6,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X6,	"--END--",	0);
	
	id = get_struc_id("_4b4c_t");
	mid = add_struc_member(id,"arg1w",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"argbc",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"argde",	0X4,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X4,	"--END--",	0);
	
	id = get_struc_id("_3c86_t");
	mid = add_struc_member(id,"argbc",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"argde",	0X2,	0x10000400,	-1,	2);
	set_member_cmt(id,	0X2,	"--END--",	0);
	
	id = get_struc_id("_3cf5_t");
	mid = add_struc_member(id,"arg1w",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"argbc",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"arge",	0X4,	0x000400,	-1,	1);
	set_member_cmt(id,	0X4,	"--END--",	0);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
        end_type_updating(UTP_STRUCT);
}

// End of file.
