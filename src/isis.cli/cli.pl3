CLI:
DO;
DECLARE VERSION$LEVEL LITERALLY '04H',
	EDIT$LEVEL LITERALLY '00H';
declare cpyrite(*) byte data('(C) 1975,1976,1977,1978,1979,1980 INTEL CORP');
DECLARE VERSION(*) BYTE DATA(VERSION$LEVEL,EDIT$LEVEL);
$include(cli.ipx)
$LIST
DECLARE BUFFER(128) BYTE;
DECLARE DEBUG BOOLEAN;
DECLARE BUFFER$PTR ADDRESS, CHAR BASED BUFFER$PTR BYTE;
DECLARE (PATHNAME$PTR,ACTUAL,STATUS,ENTRY,RETSW) ADDRESS;

/* *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
   *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

   BEGINNING OF PROGRAM.

   *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
   *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-* */

STACKPTR = MEMCK;
OUTPUT(0FCH) = 0FCH; /* ENABLE CONSOLE INTERRUPTS 0 AHD 1 */
ENABLE;
OUTPUT(0FDH) = 20H; /* SEND END OF INTERRUPT COMMAND */
BUFFER$PTR = .(':CI: ');
CALL RESCAN(1,.STATUS);
IF STATUS = 0 THEN
DO;
  CALL READ(1,.BUFFER,LENGTH(BUFFER),.ACTUAL,.STATUS);
  CALL FILE$ERROR(STATUS,BUFFER$PTR,TRUE);
END;
DO FOREVER;
  CALL WRITE(0,.('-'),1,.STATUS);
  CALL READ(1,.BUFFER,LENGTH(BUFFER),.ACTUAL,.STATUS);
  CALL FILE$ERROR(STATUS,BUFFER$PTR,TRUE);
  BUFFER(ACTUAL) = CR;
  CALL FORCE$UPPER(.BUFFER);
  BUFFER$PTR = DEBLANK(.BUFFER);
  IF CHAR = ';' THEN CHAR = CR;
  IF CHAR <> CR THEN
  DO;
    /* NOW CHECK FDR DEBUG MODE (PATHNAHE PRECEDED BY 'DEBUG' */
    DEBUG = FALSE; /* ASSUME NORMAL CASE, NOT DEBUGGING */
    IF SEQ(.('DEBUG'),BUFFER$PTR,5)
    AND (DELIMIT(BUFFER$PTR)=BUFFER$PTR+5) THEN
    DO;
      BUFFER$PTR = DEBLANK(DELIMIT(BUFFER$PTR+5));
      DEBUG = TRUE;
      IF CHAR = CR THEN CALL MONITOR;
    END;
    PATHNAME$PTR = BUFFER$PTR;
    BUFFER$PTR = DELIMIT(DEBLANK(BUFFER$PTR));
    CALL RESCAN(1,.STATUS);
    CALL READ(1,.BUFFER,BUFFER$PTR-.BUFFER,.ACTUAL,.STATUS);
    CALL FORCE$UPPER(PATHNAME$PTR);
    IF DEBUG THEN RETSW = 2; ELSE RETSW = 1;
    CALL LOAD(PATHNAME$PTR,0,RETSW,.ENTRY,.STATUS);
    CALL FILE$ERROR(STATUS,PATHNAME$PTR,FALSE);
    CALL READ(1,.BUFFER,LENGTH(BUFFER),.ACTUAL,.STATUS);
  END;
END;
END;
EOF
