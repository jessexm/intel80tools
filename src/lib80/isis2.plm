
isis2: DO;

DECLARE IOPEN LITERALLY '0',
 ICLOSE LITERALLY '1',
 IDELETE LITERALLY '2',
 IREAD LITERALLY '3',
 IWRITE LITERALLY '4',
 ISEEK LITERALLY '5',
 ILOAD LITERALLY '6',
 IRENAME LITERALLY '7',
 ICONSOL LITERALLY '8',
 IEXIT LITERALLY '9',
 IATTRIB LITERALLY '10',
 IRESCAN LITERALLY '11',
 IERROR LITERALLY '12',
 IWHOCON LITERALLY '13',
 ISPATH LITERALLY '14';

ISIS: PROCEDURE(code, param$p) EXTERNAL; DECLARE code BYTE, param$p ADDRESS; end;


open: procedure (conn$p, path$p, access, echo, status$p) public;
    declare (conn$p, path$p, access, echo, status$p) address;
    CALL ISIS(IOPEN, .conn$p);
end open;

read: procedure (conn, buff$p, count, actual$p, status$p) public;
    declare (conn, buff$p, count, actual$p, status$p) address;
    call ISIS(IREAD, .conn);
end read;

rename: procedure (old$p, new$p, status$p) public;
    declare (old$p, new$p, status$p) address;
    CALL ISIS(IRENAME, .old$p);
end rename;
seek: procedure (conn, mode, block$p, byte$p, status$p) public;
    declare (conn, mode, block$p, byte$p, status$p) address;
    CALL ISIS(ISEEK, .conn);
end seek;


write: procedure (conn, buff$p, count, status$p) public;
    declare (conn, buff$p, count, status$p) address;
    call ISIS(IWRITE, .conn);
end write;


end;



