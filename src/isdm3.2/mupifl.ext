$save nolist


get$address: PROCEDURE(default) POINTER EXTERNAL;
	DECLARE
		default		POINTER;
END get$address;


get$address$pvam: PROCEDURE(default,actual) POINTER EXTERNAL;
	DECLARE
		default		POINTER,
		actual		POINTER;
END get$address$pvam;


get$word: PROCEDURE(default) WORD EXTERNAL;
	DECLARE
		default		WORD;
END get$word;


get$decimal: PROCEDURE(default) WORD EXTERNAL;
	DECLARE
		default		WORD;
END get$decimal;


out$word: PROCEDURE(value) EXTERNAL;
	DECLARE
		value		WORD;
END out$word;


out$byte: PROCEDURE(value) EXTERNAL;
	DECLARE
		value		BYTE;
END out$byte;


out$decimal: PROCEDURE(value) EXTERNAL;
	DECLARE
		value		WORD;
	END out$decimal;


out$crlf: PROCEDURE EXTERNAL;
END out$crlf;


out$address: PROCEDURE(adr) EXTERNAL;
	DECLARE
		adr		POINTER;
END out$address;


out$dis: PROCEDURE(adr) POINTER EXTERNAL;
	DECLARE
		adr		POINTER;
END out$dis;


set$word: PROCEDURE(adr, value) EXTERNAL;
	DECLARE
		adr			POINTER,
		value		WORD;
END set$word;


set$byte: PROCEDURE(adr, value) EXTERNAL;
	DECLARE
		adr			POINTER,
		value		BYTE;
END set$byte;


get$buf$char: PROCEDURE BYTE EXTERNAL;
END get$buf$char;


inc$buf$char: PROCEDURE BYTE EXTERNAL;
END inc$buf$char;


get$line$c: PROCEDURE EXTERNAL;
END get$line$c;


stop$line$c: PROCEDURE EXTERNAL;
END stop$line$c;


range: PROCEDURE(count_ptr) POINTER EXTERNAL;
	DECLARE
		count_ptr	POINTER;
END range;


skip$blank: PROCEDURE BYTE EXTERNAL;
END skip$blank;


is$term: PROCEDURE(char) BYTE EXTERNAL;
	DECLARE
		char		BYTE;
END is$term;


syntax$error: PROCEDURE EXTERNAL;
END syntax$error;


mco: PROCEDURE(char) EXTERNAL;
	DECLARE
		char		BYTE;
END mco;


mci: PROCEDURE BYTE EXTERNAL;
END mci;


rco: PROCEDURE(char) EXTERNAL;
	DECLARE
		char		BYTE;
END rco;


rci: PROCEDURE BYTE EXTERNAL;
END rci;


rcsts: PROCEDURE BYTE EXTERNAL;
END rcsts;


sq$cfg: PROCEDURE WORD EXTERNAL;
END sq$cfg;


initialize$sdm: PROCEDURE WORD EXTERNAL;
END initialize$sdm;


set$command: PROCEDURE(adr, cmd) EXTERNAL;
	DECLARE
		adr		POINTER,
		cmd		BYTE;
END set$command;


sq$set$command: PROCEDURE(adr, cmd) EXTERNAL;
	DECLARE
		adr		POINTER,
		cmd		BYTE;
END sq$set$command;


DECLARE
	SDM_REGISTER_STRUCTURE LITERALLY 'STRUCTURE(
		reserved$1 (7)	WORD,
		ip		WORD,
		fl		WORD,
		ax		WORD,
		cx		WORD,
		dx		WORD,
		bx		WORD,
		sp		WORD,
		bp		WORD,
		si		WORD,
		di		WORD,
		es		WORD,
		cs		WORD,
		ss		WORD,
		ds		WORD,
		reserved$2 (2)	WORD)';


$restore
