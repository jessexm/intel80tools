DECLARE LIT LITERALLY 'LITERALLY';
DECLARE	ERR2	LIT	'2',	/* Illegal AFTN Argument */
	ERR3	LIT	'3',	/* Too many open files */
	ERR4	LIT	'4',	/* Incorrectly speficied file */
	ERR5	LIT	'5',	/* Unrecognised device name */
	ERR9	LIT	'9',	/* Disk directory full */
	ERR12	LIT	'0CH',	/* File is already open */
	ERR13	LIT	'0DH',	/* No such file */
	ERR14	LIT	'0EH',	/* Write protected */
	ERR17	LIT	'11H',	/* Not a disk file */
	ERR19	LIT	'13H',	/* Attempted seek on non-disk file */
	ERR20	LIT	'14H',	/* Attemted back seek too far */
	ERR21	LIT	'15H',	/* Can''t rescan */
	ERR22	LIT	'16H',	/* Illegal access mode to open */
	ERR23	LIT	'17H',	/* Missing filename */
	ERR27	LIT	'1BH',	/* Illegal seek command */
	ERR28	LIT	'1CH',	/* Missing extension */
	ERR31	LIT	'1FH',	/* can''t seek on write only file */
	ERR32	LIT	'20H',	/* Can''t delete open file */
	ERR34	LIT	'22H',	/* Illegal load command */
	ERR35	LIT	'23H',	/* Seek past EOF */
	ERR203	LIT	'0CBH',	/* Invalid syntax */
	ERR204	LIT	'0CCH',	/* Premature EOF */
	ERR208	LIT	'0D0H',	/* Checksum error */
	ERR210	LIT	'0D2H',	/* Insufficient memory */
	ERR211	LIT	'0D3H',	/* Record too long */
	ERR212	LIT	'0D4H',	/* Illegal relo record */
	ERR213	LIT	'0D5H',	/* Fixup bounds error */
	ERR218	LIT	'0DAH',	/* Illegal record format */
	ERR219	LIT	'0DBH',	/* Phase error */
	ERR220	LIT	'0DCH',	/* No EOF */
	ERR221	LIT	'0DDH',	/* Segment too large */
	ERR224	LIT	'0E0H',	/* Bad record sequence */
	ERR225	LIT	'0E1H',	/* Invalid name */
	ERR226	LIT	'0E2H',	/* Name too long */
	ERR227	LIT	'0E3H',	/* Left parenthesis expected */
	ERR228	LIT	'0E4H',	/* Right parenthesis expected */
	ERR229	LIT	'0E5H',	/* Unrecognised control */
	ERR233	LIT	'0E9H',	/* 'TO' expected */
	ERR234	LIT	'0EAH',	/* Duplicate file name */
	ERR235	LIT	'0EBH',	/* Not a library */
	ERR236	LIT	'0ECH',	/* Too many common segments */
	ERR238	LIT	'0EEH',	/* Illegal stack content record */
	ERR239	LIT	'0EFH';	/* No module header record */


DECLARE	MODULE$T LITERALLY
'STRUCTURE (link ADDRESS, blk ADDRESS, byt ADDRESS, symlist ADDRESS, scode ADDRESS, sdata ADDRESS, name(1) BYTE)';
DECLARE LIBRARY$T LITERALLY
'STRUCTURE (link ADDRESS, modlist ADDRESS, publicsOnly BYTE, hasModules BYTE, name(1) BYTE)';

DECLARE SPATH$T LITERALLY
'STRUCTURE (deviceId BYTE, name(6) BYTE, ext(3) BYTE, deviceType BYTE, driveType BYTE)';

/* relocatable record types */
DECLARE	R$MODHDR	LIT	'2',
	R$MODEND	LIT	'4',
	R$CONTENT	LIT	'6',
	R$LINENO	LIT	'8',
	R$EOF		LIT	'0EH',
	R$ANCESTOR	LIT	'10H',
	R$LOCALS	LIT	'12H',
	R$PUBLICS	LIT	'16H',
	R$EXTNAMES	LIT	'18H',
	R$EXTREF	LIT	'20H',
	R$RELOC		LIT	'22H',
	R$INTERSEG	LIT	'24H',
	R$LIBLOCS	LIT	'26H',
	R$LIBNAMES	LIT	'28H',
	R$LIBDICT	LIT	'2AH',
	R$LIBHDR	LIT	'2CH',
	R$COMDEF	LIT	'2EH';

/* segment types */
DECLARE SEG$ABS LIT	'0',
	SEG$CODE	LIT	'1',
	SEG$DATA	LIT	'2',
	SEG$STACK	LIT	'3',
	SEG$MEMORY	LIT	'4',
	SEG$RESERVE	LIT '5',	/* reserved for future Intel use */
	SEG$NAMCOM	LIT	'6',
	SEG$UNACOM	LIT	'255';

/* fixup types */
DECLARE FIX$UNDEF LIT '0',
	FIX$LOW		LIT	'1',
	FIX$HI		LIT	'2',
	FIX$BOTH	LIT	'3';

/* alignment types */
DECLARE ALN$UNDEF LIT '0',
	ALN$INPAGE	LIT	'1',
	ALN$PAGE	LIT	'2',
	ALN$BYTE	LIT	'3';

/* module type */
DECLARE	MT$NOTMAIN	LIT	'0',
	MT$MAIN		LIT '1';

