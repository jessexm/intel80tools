plm2b: DO;
$include(plm2b.ipx)

sub$689E: procedure public;
	sub$68E8: procedure;
		declare bC252 byte;
		declare i byte;

		sub$69EB: procedure(arg1b, arg2w$p);
		    declare arg1b byte, arg2w$p address;
		    declare arg2w based arg2w$p address;
		    declare p address;
		    if arg2w <> 0 then
		    do;
			if arg1b > bC252 then
			    arg2w = 0;
			else
			do;
			    p = arg2w;
			    arg2w = tx2qp;

			    do while p <> 0;
				p = p - 1;  
				arg2w = arg2w - 1;
				if tx2opc(arg2w) = T2$LINEINFO then
				    if tx2op2(arg2w) = 0 then
					if tx2op3(arg2w) <> 0 then
					    p = p -(tx2op3(arg2w) - tx2op1(arg2w));
			    end;
			end;
		    end;
		end sub69EB;

	/* sub$68E8 */
		bC252 = bC1D2 and 3;
		if (bC1D2 and 4) <> 0 then
		do;
			tx2op2(1) = tx2op1(tx2qp);
			tx2op1(tx2qp) = 1;
		end;
		else
			call sub$69EB(1, .tx2op1(tx2qp));

		call sub$69EB(2, .tx2op2(tx2qp));
		if bC252 = 3 then
		do;
			if curOp = T2$CALL then
				tx2op3(tx2qp) = tx2op3(tx2qp) + botInfo;
			else if  curOp = T2$BYTEINDEX or curOp = T2$WORDINDEX then
			do;
				i = tx2op1(tx2qp);
				tx2op2(i) = tx2op2(i) + tx2op3(tx2qp) *sub$575E(tx2op1(i));
			end;
			else
				call sub$69EB(3, .tx2op3(tx2qp));
		end;
		tx2Aux1b(tx2qp) = 0ch;
		tx2Aux2b(tx2qp) = 9;
	end;

	sub$6AA4: procedure;
		if curOp = T2$VARIABLE then
		do;
			curInfo$p, tx2op1(tx2qp) = tx2op1(tx2qp) + botInfo;
			if testInfoFlag(F$MEMBER) then
			do;
				curInfo$p = getParentOffset;
				tx2Aux2b(tx2qp) = 4;
			end;
			else if testInfoFlag(F$AUTOMATIC) then
				tx2Aux2b(tx2qp) = 0ah;
			else
				tx2Aux2b(tx2qp) = 4;
			curInfo$p = tx2op1(tx2qp);
			tx2op2(tx2qp) = getLinkVal;
			tx2Aux1b(tx2qp) = b5286(getType);
		end;
		else if curOp <= T2$BIGNUMBER then
		do;
			tx2op2(tx2qp) = tx2op1(tx2qp);
			tx2Aux2b(tx2qp) = 8;
			tx2op1(tx2qp) = 0;
			if curOp = T2$BIGNUMBER then
			do;
				tx2Aux1b(tx2qp) = 1;
				tx2opc(tx2qp) = T2$NUMBER;
			end;
			else
				tx2Aux1b(tx2qp) = 0;
		end;
		else
		do;
			tx2Aux1b(tx2qp) = 0;
			tx2op2(tx2qp) = 0;
		end;
	end;

/* sub$679E */
	do tx2qp = 4 to bC1Bf - 1;
		curOp = tx2opc(tx2qp);
		bC1D2 = b5124(curOp);
		if (bC1D2 and 0c0h) = 0 then
			call sub$68E8;
		else if (bC1D2 and 0c0h) = 40h then
			call sub$6AA4;
	end;
end;

END;
