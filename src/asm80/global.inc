declare lit literally 'literally',
	TRUE lit '0FFh',
	FALSE lit '0',
	CR lit '0Dh',
	LF lit '0Ah';

declare	CC$BAD	lit	'0',
	CC$WS	lit	'1',
	CC$SEMI	lit	'2',
	CC$COLON lit	'3',
	CC$CR	lit	'4',
	CC$PUNCT lit	'5',
	CC$DOLAR lit	'6',
	CC$QUOTE lit	'7',
	CC$DIGIT lit	'8',
	CC$LET	lit	'9',
	CC$ESC	lit	'0bh';

declare TT$ID	LIT	'0',
	TT$NUM	LIT	'2',
	TT$STR	LIT	'4';

declare tokenSize lit 'toksiz',
	tokStart lit 'tokst',
	packToken lit 'pckTkn';

declare w651F address external,
	b6521 byte external,
	w6522 address external,
	b6524 byte external,
	b6525 byte external,
	b6526(4) byte external,
	(fix22Idx, fix24Idx, fix20Idx, fix6Idx) byte external,
	extNamIdx byte external,
	b652B(4) byte external,
	b652F byte external,
	r$eof structure(type byte, len address, crc byte) external,
	r$extnames1 structure(type byte, len address, dta(125) byte) external,
	moduleNameLen byte external,
	r$extnames2 structure(type byte, len address, dta(125) byte) external,
	r$content structure(type byte, len address, segid byte, offset address, dta(122) byte, crc byte) external,
	r$publics structure(type byte, len address, segid byte, dta(124) byte, crc byte) external,
	r$reloc structure(type byte, len address, hilo byte, dta(62) address) external,
	r$interseg structure(type byte, len address, segid byte, hilo byte, dta(29) address, crc byte) external,
	r$extref structure(type byte, len address, hilo byte, dta(30) address, crc byte) external,
	r$modend structure(type byte, len address, modtyp byte, segid byte, offset address, crc byte) external,
	wZERO address external,
/*	pad6741 byte initial(0ah), */
	b6742 byte external,
	b6743 byte external,
	b6744 byte external,
	startSeg byte external,
/*	padb6746 byte, */
	activeSeg byte external,
	b6748 byte external,
	b6749 byte external,
	b674A(2) byte external,
	alignTypes(4) byte external,
	w6750 address external,
	w6752 address external,
	b6754 byte external,
	startDefined byte external,
	startOffset address external,
	tokenSP byte external,
	lineBuf(128) byte external,
	tokStart(9) address external,
	curTokStart address external,
	tokenSym(9) address external,
	curTokenSym$p address external,
	curTokenSym based curTokenSym$p structure(w0 address, w2 address, w4 address, type byte, flags byte), 
	tokenType(9) byte external,
	tokenSize(9) byte external,
	tokenAttr(9) byte external,
	tokenSymId(9) address external,
/* end */
	endLineBuf address external,
	ifDepth byte external,
	skipping(9) byte external,
	inElse(9) byte external,
	opSP byte external,
	opStack(17) byte external,
/* ov4 compat 2CA0 */
	(accum1, accum2) address external,
	(accum1$lb, accum1$hb, accum2$lb, accum2$hb) byte external,
	b6855 byte external,
	b6856 byte external,
	b6857 byte external,
	b6858 byte external,
	b6859 byte external,
	w685A address external,
	w685C address external,
	curChar byte external,
	reget byte external,
	lookAhead byte external,
/*	pad6861 byte initial(0), */
	symTab(2) address external,
/*	pad6866 address, */
	w6868(3) address external,
	w686E address external,
	w6870 address external,
	b6872 byte external,
	b6873(6) byte external,
	b6879(6) byte external,
	b687F byte external,
	b6880 byte external,
	b6881 byte external,
	b6882 byte external,
	b6883 byte external,
	b6884 byte external,
	b6885 byte external,
	objfd address external,
	xreffd address external,
	infd address external,
	outfd address external,
/*	pad688E address, */
	statusIO address external,
	openStatus address external,
/*	pad6894 address initial(0FFFFh), */
	asmErrCode byte external,
/*	pad6897 byte initial(0), */
	primaryValid byte external,
/* end */
/*	pad6899 byte initial(0), */
/* ov4 compat 2C9F */
	b689A byte external,
	b689B byte external,
	b689C byte external,
/*	pad689D(2) byte, */
	curCol byte external,
	w68A0 address external,
	w68A2 address external,
	lineCnt address external,
	w68A6 address external,
	pageCnt address external,
/*	pad68AA byte, */
	b68AB byte external,
/*	pad68AC byte, */
	b68AD byte external,
	b68AE(8) byte external,
	w68B6 address external,
	b68B8(200) byte external,
	outbuf(128) byte external,
/* end */
	b6A00 byte external,
/* ov4 compat 2F57 */
	out$p address external,
	endOutBuf address external,
/*	pad6A05 address initial(.outbuf), */
/*	pad6A07 byte initial(0), */
	objFile(15) byte external,
	lstFile(15) byte external,
	aF0Asxref$tmp(1) byte external,
	aF0Asxref(1) byte external,
	aF0Asmac$tmp(1) byte external,
	w6A4E address external,
	bp6A4E(2) byte external,
/*	pad6A50(2) byte initial('  '),	*/	/* protects for very big files */
	asciiLineNo(4) byte external,
	b6A56 byte external,
	b6A57(4) byte external,
	ctlDEBUG byte external,
	controls(1) byte external,
	ctlMACRODEBUG byte external,
	ctlXREF byte external,
	ctlSYMBOLS byte external,
	ctlPAGING byte external,
	ctlTTY byte external,
	ctlMOD85 byte external,
	ctlPRINT byte external,
	ctlOBJECT byte external,
	ctlMACROFILE byte external,
	ctlPAGEWIDTH byte external,
	ctlPAGELENGTH byte external,
/*	pad6A67 byte initial(0), */		/* INCLUDE */
	ctlTITLE byte external,
/*	pad6A69(2) byte,*/			/* SAVE, RESTORE */ 
	ctlEJECT byte external,
	ctlLIST byte external,
	ctlGEN byte external,
	ctlCOND byte external,
	b6A6F byte external,
	titleLen byte external,
	b6A71 byte external,
/*	pad6A72(3) byte initial(78h, 0FFh), */
	controlSeen(12) byte external,
	saveStack(24) byte external,
	saveIdx byte external,
	ctlTITLESTR(64) byte external,
	tokBufLen byte external,
	tokType byte external,
	controlId byte external,
	tokBuf(64) byte external,
	tokBufIdx byte external,
	w6B1E address external,
/* end */
	b6B20 byte external,
	MacroDebugOrGen byte external,
/* ov4 compat 2F56 */
	scanCmdLine byte external,
	b6B23 byte external,
	b6B24 byte external,
	b6B25 byte external,
	has16bitOperand byte external,
	phase byte external,
	b6B28 byte external,
	b6B29 byte external,
	opType byte external,
	b6B2B byte external,
	b6B2C byte external,
	b6B2D byte external,
	finished byte external,
	b6B2F byte external,
	b6B30 byte external,
	b6B31 byte external,
	b6B32 byte external,
	b6B33 byte external,
	b6B34 byte external,
	b6B35 byte external,
	b6B36 byte external,
	segSize(4) address external,
/*	padw6B3E(2) byte initial(0, 0), */
	w6B41(3) address external,
	cmdLineBuf(129) byte external,
	actRead address external,
	errCnt address external,
/*	padw6BCB(2) byte, */
	w6BCE address external,
/*	pad6BD0(3) byte initial(0), */
	zero address external,
	cmdch$p address external,
	controls$p address external,
	b6BD9 byte external,
/*	pad6BDA byte, */
	ii byte external,
	b6BDC byte external,
	jj byte external,
/* end */
/* ov4 compat 2F57 */
	curFileName$p address external,
	w6BE0 address external,
	bp6BE0(2) byte external,
	w6BE2 address external;
/* end */
