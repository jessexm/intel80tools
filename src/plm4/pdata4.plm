pdata: DO;
/* as this defines the record sizes so override the VALx$SIZE literals */

declare	VAL6$SIZE	literally	'1018',
	VAL8$SIZE	literally	'1021',
	VAL18$SIZE	literally	'300',
	VAL20$SIZE	literally	'1019',
	VAL22$SIZE	literally	'1019',
	VAL24$SIZE	literally	'101';
$include(pdata4.ipx)

declare (helperModId, endHelperId) byte public,
	listing byte public,
	listOff byte public,
	codeOn byte public,
	locLabStr(32) byte public,		/* used to hold symbol name */
	wa8125(3) address public,
	bo812B  byte public initial(true),
	baseAddr address public,
	cfCode byte public,
	w812F address public,
	lineNo address public,
	depth address public,
	stmtNo address public,
	olstch address public initial(0),
	ocurch address public initial(0),
	bo813B byte public initial(true),
	bo813C byte public initial(true),
	lstLineLen byte public,
	lstLine(130) byte public,
	rec6$4 REC6$ST public initial(6, 0, 1),
	rec22 REC22$ST public initial(22h, 0, 3),
	rec24$1 REC24$ST public initial(24h, 0, 2, 3),
	/* to allow common user defined types add in the extra val buf */
	/* 1019 - VAL24$SIZE => 918 */
	rec24$1$extra(918) byte,
	rec24$2 REC24$ST public initial(24h, 0, 3, 3),
	rec24$3 REC24$ST public initial(24h, 0, 4, 3),
	rec20 REC20$ST public initial(20h, 0, 3),
	rec8 REC8$ST public initial(8, 0, 1),
	rec4 REC4$ST  public initial(4, 4),
	rec4seg byte at(.rec4.seg) initial(1),
	b9692 byte public,
	helperId byte public,
	helperStr(1) byte public,
	ihelperStr(*) byte initial('@P    :'),
	b969C byte public,
	b969D byte public,
	w969E address public,
	wValAry(4) address public,
	sValAry(4) address public,
	b96B0 byte public,
	b96B1(37) byte public,
	b96D6 byte public,
	w96D7 address public,
	curExtId byte public,
	commentStr(1) byte public,
	commentStri(40) byte initial('; '),
	lineLen byte public,
	line(80) byte public,
	opByteCnt byte public,
	opBytes(3) byte public,
	dstRec byte public,
	srcbuf(640) byte public,
	tx1buf(640) byte public,
	objbuf(640) byte public,
	lstbuf(640) byte public;
END;
