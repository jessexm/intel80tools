:F1:asm80 disk2.asm print(disk2.lst) object(disk2.obj) DEBUG



ISIS-II 8080/8085 MACRO ASSEMBLER, V4.1         MODULE   PAGE    1


  LOC  OBJ         LINE        SOURCE STATEMENT

                      1         CSEG
                      2         public  dkstat  ; dk$stat
                      3         public  rtype   ; r$type
                      4         public  rbyte   ; r$byte
                      5         public  strtio  ; strt$io
                      6         extrn   dkcont  ; disk controller
                      7 
  F821                8 IOCDR1  equ     0F821h
  F841                9 IOCCOM  equ     0F841h
  F844               10 IOCDR2  equ     0F844h
                     11 
                     12 ; controller
  0000               13 NOCONT  equ     0
  0001               14 CONT1   equ     1
  0002               15 CONT2   equ     2
  0003               16 CONTIN  equ     3       ; integrated single density
  0004               17 CONTHD  equ     4
                     18 
                     19 ; and their IO port bases (ISD handled separately)
  0078               20 BASE1   equ     78h
  0088               21 BASE2   equ     88h
  0068               22 BASEHD  equ     68h
                     23 
                     24 
                     25 ; IOC INTERFACE COMMANDS
  00C1               26 IOCS    equ     0c1h            ; IOC INPUT DBB STATUS PORT
  00C1               27 IOCC    equ     0c1h            ; IOC OUTPUTY CONTROL COMMAND PORT
  00C0               28 IOCI    equ     0c0h            ; IOC INPUT DATA (FROM DBB) PORT
  00C0               29 IOCO    equ     0c0h            ; IOC OUTPUT DATA (TO DBB) PORT
  0004               30 F0      equ     00000100B       ; FLAG 0 - SLAVE IS BUSY, MASTER IS LOCKED OUT
  0002               31 IBF     equ     00000010B       ; SLAVE INPUT BUFFER IS FULL
  0001               32 OBF     equ     00000001B       ; SLAVE OUTPUT BUFFER IS FULL
  0015               33 WPBC    equ     15h             ; write parameter block command
  0016               34 WPCC    equ     16h             ; write parameter block command continuation
  0017               35 WDBC    equ     17h             ; write data block command
  0018               36 WDCC    equ     18h             ; reserved
  0019               37 RDBC    equ     19h             ; read data block command
  001A               38 RDCC    equ     1ah             ; reserved
  001B               39 RRSTS   equ     1bh             ; read result status command
  001C               40 RDSTS   equ     1ch             ; read device status command
                     41 
                     42 ; PSEUDO INTERRUPT INSTRUCTIONS
  000D               43 DISABL  equ     0dh             ; disable interrupts
  0005               44 ENABL   equ     05h             ; enable interrupts
  00FF               45 CPUC    equ     0ffh            ; port for these instructions
                     46 
                     47 ; DISK INSTRUCTIONS
  0001               48 SEEK    equ     1               ; seek instruction
  0002               49 FORMAT  equ     2               ; format instruction
  0003               50 RECAL   equ     3               ; recalibrate instruction
  0004               51 READ    equ     4               ; read data instruction
  0005               52 VERIFY  equ     5               ; verify crc instruction
  0006               53 WRITE   equ     6               ; write data instruction
  0007               54 WRITED  equ     7               ; write deleted data instruction


ISIS-II 8080/8085 MACRO ASSEMBLER, V4.1         MODULE   PAGE    2


  LOC  OBJ         LINE        SOURCE STATEMENT

                     55 
                     56 ; Layout of the I/O parameter block (IOPB)
                     57 ;       Only the first five bytes of the IOPB are transmitted to the ISD
                     58 ;       IOCW    BYTE    channel word
                     59 ;       IOINS   BYTE    diskette instruction
                     60 ;       NSEC    BYTE    number of sectors
                     61 ;       TADR    BYTE    track address
                     62 ;       SADR    BYTE    sector address
                     63 ;       BUF     ADDRESS buffer address
                     64 
  0000 3A0000   E    65 dkstat: lda     dkcont
  0003 B7            66         ora     a
  0004 C8            67         rz                      ; not present
  0005 FE04          68         cpi     CONTHD
  0007 CA2000   C    69         jz      statHD          ; hard disk
  000A FE03          70         cpi     CONTIN
  000C C21500   C    71         jnz     dkst1           ; jump if not isd
  000F 061C          72         mvi     b, RDSTS        ; use bios to get ISD status
  0011 CD21F8        73         call    IOCDR1
  0014 C9            74         ret
                     75 
  0015 FE02          76 dkst1:  cpi     CONT2
  0017 C21D00   C    77         jnz     dkst2
  001A DB88          78         in      BASE2           ; controller 2
  001C C9            79         ret
                     80 
  001D DB78          81 dkst2:  in      BASE1           ; controller 1
  001F C9            82         ret
                     83 
  0020 DB68          84 statHD: in      BASEHD
  0022 C9            85         ret
                     86 
                     87 
                     88 
                     89 
  0023 3A0000   E    90 rtype:  lda     dkcont
  0026 FE04          91         cpi     CONTHD          
  0028 CA3D00   C    92         jz      typeHD          ; hard disk
  002B FE03          93         cpi     CONTIN
  002D C23200   C    94         jnz     type1           ; jump if not isd
  0030 AF            95         xra     a       ; no result type for ISD
  0031 C9            96         ret
                     97 
  0032 FE02          98 type1:  cpi     CONT2
  0034 C23A00   C    99         jnz     type2
  0037 DB89         100         in      BASE2 + 1       ; controller 2
  0039 C9           101         ret
                    102 
  003A DB79         103 type2:  in      BASE1 + 1       ; controller 1
  003C C9           104         ret
                    105 
  003D DB69         106 typeHD: in      BASEHD + 1
  003F C9           107         ret
                    108 
                    109 


ISIS-II 8080/8085 MACRO ASSEMBLER, V4.1         MODULE   PAGE    3


  LOC  OBJ         LINE        SOURCE STATEMENT

                    110 
                    111 rbyte:
  0040 3A0000   E   112         lda     dkcont
  0043 FE04         113         cpi     CONTHD
  0045 CA5E00   C   114         jz      byteHD          ; hard disk
  0048 FE03         115         cpi     CONTIN
  004A C25300   C   116         jnz     rbyte1          ; jump if not isd
  004D 061B         117         mvi     b, RRSTS        ; isd use bios
  004F CD21F8       118         call    IOCDR1
  0052 C9           119         ret
                    120 
  0053 FE02         121 rbyte1: cpi     CONT2
  0055 C25B00   C   122         jnz     rbyte2
  0058 DB8B         123         in      BASE2 + 3       ; controller 2
  005A C9           124         ret
                    125 
  005B DB7B         126 rbyte2: in      BASE1 + 3       ; controller 1
  005D C9           127         ret
                    128 
  005E DB6B         129 byteHD: in      BASEHD + 3
  0060 C9           130         ret
                    131 
                    132 
                    133 
  0061 3A0000   E   134 strtio: lda     dkcont
  0064 FE04         135         cpi     CONTHD
  0066 CA8900   C   136         jz      strtHD          ; hard disk
  0069 FE03         137         cpi     CONTIN
  006B C27200   C   138         jnz     strt1           ; not isd
  006E CD9800   C   139         call    isddr           ; use standard code
  0071 C9           140         ret
                    141 
  0072 FE02         142 strt1:  cpi     CONT2
  0074 C28000   C   143         jnz     strt2
  0077 79           144         mov     a, c            ; controller 2
  0078 D389         145         out     BASE2 + 1
  007A 78           146         mov     a, b
  007B D38A         147         out     BASE2 + 2
  007D C38F00   C   148         jmp     wait
                    149 
  0080 79           150 strt2:  mov     a, c            ; controller 1
  0081 D379         151         out     BASE1 + 1
  0083 78           152         mov     a, b
  0084 D37A         153         out     BASE1 + 2
  0086 C38F00   C   154         jmp     wait
                    155 
  0089 79           156 strtHD: mov     a, c            ; hard disk
  008A D369         157         out     BASEHD + 1
  008C 78           158         mov     a, b
  008D D36A         159         out     BASEHD + 2
                    160 
  008F CD0000   C   161 wait:   call    dkstat          ; wait till i/o done
  0092 E604         162         ani     4
  0094 CA8F00   C   163         jz      wait
  0097 C9           164         ret


ISIS-II 8080/8085 MACRO ASSEMBLER, V4.1         MODULE   PAGE    4


  LOC  OBJ         LINE        SOURCE STATEMENT

                    165 
                    166 ; code is a direct lift from the Intellec series II interface document
                    167 
                    168 ;***************************************************************
                    169 ;* PROCEDURE NAME = ISDDR (IHTEGRATED SINGLE DENSITY DISK DRIVER)
                    170 ;* PROCESS: TRANSMIT THE IOPB; ONE BYTE AT A TIME, TO THE ISD
                    171 ;*          IF THE INSTRUCTION TO THE OISK IS A OATA TRAHSFER
                    172 ;*          (I E READ DATA, FORMAT, WRITE DATA, WRITE DELETED
                    173 ;*          DATA) THEN TRAHSFER THE DATA. ONE BYTE AT A TIME
                    174 ;*          TO/FROH THE ISD
                    175 ;* IHPUT:   B-REG COHTAIHS MSB OF IOPB
                    176 ;*          C-REG COHTAIHS LSB OF IOPB
                    177 ;* OUTPUT:  THE IOPB IS TRANSMITTED TO THE ISD DATA IS TRANSFERED
                    178 ;*          TO/FROM THE ISD AS REQUIRED
                    179 ;***************************************************************
                    180 
                    181 isddr:
  0098 C5           182         push    b               ; save the iopb
  0099 03           183         inx     b
  009A 0A           184         ldax    b               ; test ioins
  009B FE04         185         cpi     READ
  009D C2D100   C   186         jnz     isd1            ; jump if not read
  00A0 E1           187         pop     h               ; get the iobp
  00A1 E5           188         push    h               ; save again
  00A2 23           189         inx     h
  00A3 23           190         inx     h
  00A4 56           191         mov     d, m            ; d = number of sectors
  00A5 E1           192         pop     h
  00A6 D5           193         push    d               ; save the number of sectors
  00A7 CD2601   C   194         call    triopb          ; issue the command
  00AA 23           195         inx     h               ; get the buffer address into hl
  00AB 5E           196         mov     e, m
  00AC 23           197         inx     h
  00AD 56           198         mov     d, m
  00AE EB           199         xchg
  00AF 0619         200         mvi     b, RDBC         ; issue the read data block command
  00B1 CD41F8       201         call    IOCCOM
  00B4 D1           202         pop     d               ; recover the number of sectors 
                    203 
                    204 rdlp1:
  00B5 1E80         205         mvi     e, 128          ; read a sector (128 bytes)
                    206 
                    207 rdlp2:
  00B7 DBC1         208         in      IOCS            ; wait for byte available
  00B9 E607         209         ani     F0 or IBF or OBF
  00BB FE01         210         cpi     OBF             ; test for slave done; somethign for the master
  00BD C2B700   C   211         jnz     rdlp2           ; loop until slave is ready
  00C0 DBC0         212         in      IOCI            ; get the byte from the DBB
  00C2 77           213         mov     m, a            ; save to buffer
  00C3 23           214         inx     h
  00C4 1D           215         dcr     e               ; loop for one sector
  00C5 C2B700   C   216         jnz     rdlp2
  00C8 15           217         dcr     d               ; loop for number of sectors
  00C9 C2B500   C   218         jnz     rdlp1
  00CC 3E05         219         mvi     a, ENABL                ; enable interrupts


ISIS-II 8080/8085 MACRO ASSEMBLER, V4.1         MODULE   PAGE    5


  LOC  OBJ         LINE        SOURCE STATEMENT

  00CE D3FF         220         out     CPUC
  00D0 C9           221         ret
                    222         ;----------------------------------------------------------------------
                    223 isd1:                           ; here if not a read so test for
  00D1 FE02         224         cpi     FORMAT          ; FORMAT, WRITE pr WRITED 
  00D3 CAE000   C   225         jz      isd2
  00D6 FE06         226         cpi     WRITE
  00D8 CAE000   C   227         jz      isd2
  00DB FE07         228         cpi     WRITED
  00DD C21901   C   229         jnz     isd3            ; must be a SEEK, RECALB or VERIFY
                    230 
                    231 isd2:
  00E0 E1           232         pop     h               ; recover iopb
  00E1 E5           233         push    h               ; save again
  00E2 23           234         inx     h
  00E3 7E           235         mov     a, m
  00E4 FE02         236         cpi     FORMAT
  00E6 23           237         inx     h
  00E7 CAEE00   C   238         jz      isd2a           ; don't use sector count for format
  00EA 4E           239         mov     c, m            ; pick up sector count
  00EB C3F000   C   240         jmp     isd2b
                    241 
                    242 isd2a:
  00EE 0E01         243         mvi     c, 1            ; format has only single sector
                    244 
                    245 isd2b:
  00F0 23           246         inx     h
  00F1 23           247         inx     h
  00F2 23           248         inx     h
  00F3 5E           249         mov     e, m
  00F4 23           250         inx     h
  00F5 56           251         mov     d, m
  00F6 EB           252         xchg                    ; hl = buffer
  00F7 0617         253         mvi     b, WDBC         ; load wite data block command
  00F9 CD41F8       254         call    IOCCOM          ; output the command
  00FC CD1E01   C   255         call    iocrdy          ; wait till slave is idle
  00FF 79           256         mov     a, c            ; number of sectors to be written
  0100 D3C0         257         out     IOCO
                    258 
                    259 wrlp1:
  0102 F5           260         push    psw
  0103 1680         261         mvi     d, 128          ; sector length
                    262 
                    263 wrlp2:
  0105 CD1E01   C   264         call    iocrdy          ; wait will slave is idle
  0108 7E           265         mov     a, m            ; write the data byte
  0109 D3C0         266         out     IOCO
  010B 23           267         inx     h               ; advance buffer
  010C 15           268         dcr     d
  010D C20501   C   269         jnz     wrlp2
  0110 F1           270         pop     psw             ; number of sectors
  0111 3D           271         dcr     a
  0112 C20201   C   272         jnz     wrlp1           ; loop till all written
  0115 3E05         273         mvi     a, ENABL        ; enable interrupts
  0117 D3FF         274         out     CPUC


ISIS-II 8080/8085 MACRO ASSEMBLER, V4.1         MODULE   PAGE    6


  LOC  OBJ         LINE        SOURCE STATEMENT

                    275 
                    276 isd3:
  0119 E1           277         pop     h               ; hl = iopb
  011A CD2601   C   278         call    triopb          ; send the iopb
  011D C9           279         ret
                    280 
                    281 ;------
  011E DBC1         282 iocrdy: in      IOCS            ; get the status
  0120 E607         283         ani     F0 or OBF or IBF; look till ready
  0122 C21E01   C   284         jnz     iocrdy
  0125 C9           285         ret
                    286 
                    287 ;***************************************************************
                    288 ;* Procedure name: TRIOPB (transmit IOPB to ISD)
                    289 ;* Process: Transmit the IOPB to the 8271 integrated single density
                    290 ;*          controller this procedure is called only bu procedure ISDDR
                    291 ;* Input: HL contains address of the IOPB
                    292 ;* Output: Transmit the IOPB
                    293 ;*         HL points to SADR of IOPB
                    294 ;* Modified: A, FLAGS, B, C, D, HL
                    295 ; *
                    296 ;***************************************************************
                    297 triopb:                         ; transfer$iopb$to$isd
  0126 4E           298         mov     c, m            ; the iocw 
  0127 0615         299         mvi     b, WPBC         ; issue first byte
  0129 CD44F8       300         call    IOCDR2
  012C 1604         301         mvi     d, 4            ; send the remaining 4 bytes
                    302 
                    303 trloop:
  012E 23           304         inx     h               
  012F 4E           305         mov     c, m
  0130 0616         306         mvi     b, WPCC
  0132 CD44F8       307         call    IOCDR2
  0135 15           308         dcr     d
  0136 C22E01   C   309         jnz     trloop
                    310 
  0139 CD0000   C   311 trwait: call    dkstat          ; see if the bit indicating operation
  013C E604         312         ani     4               ; compete is set
  013E CA3901   C   313         jz      trwait          ; loop until done
  0141 C9           314         ret
                    315 
                    316         end;


PUBLIC SYMBOLS
DKSTAT C 0000    RBYTE  C 0040    RTYPE  C 0023    STRTIO C 0061    

EXTERNAL SYMBOLS
DKCONT E 0000    

USER SYMBOLS
BASE1  A 0078    BASE2  A 0088    BASEHD A 0068    BYTEHD C 005E    CONT1  A 0001    CONT2  A 0002    CONTHD A 0004    
CONTIN A 0003    CPUC   A 00FF    DISABL A 000D    DKCONT E 0000    DKST1  C 0015    DKST2  C 001D    DKSTAT C 0000    
ENABL  A 0005    F0     A 0004    FORMAT A 0002    IBF    A 0002    IOCC   A 00C1    IOCCOM A F841    IOCDR1 A F821    
IOCDR2 A F844    IOCI   A 00C0    IOCO   A 00C0    IOCRDY C 011E    IOCS   A 00C1    ISD1   C 00D1    ISD2   C 00E0    


ISIS-II 8080/8085 MACRO ASSEMBLER, V4.1         MODULE   PAGE    7


ISD2A  C 00EE    ISD2B  C 00F0    ISD3   C 0119    ISDDR  C 0098    NOCONT A 0000    OBF    A 0001    RBYTE  C 0040    
RBYTE1 C 0053    RBYTE2 C 005B    RDBC   A 0019    RDCC   A 001A    RDLP1  C 00B5    RDLP2  C 00B7    RDSTS  A 001C    
READ   A 0004    RECAL  A 0003    RRSTS  A 001B    RTYPE  C 0023    SEEK   A 0001    STATHD C 0020    STRT1  C 0072    
STRT2  C 0080    STRTHD C 0089    STRTIO C 0061    TRIOPB C 0126    TRLOOP C 012E    TRWAIT C 0139    TYPE1  C 0032    
TYPE2  C 003A    TYPEHD C 003D    VERIFY A 0005    WAIT   C 008F    WDBC   A 0017    WDCC   A 0018    WPBC   A 0015    
WPCC   A 0016    WRITE  A 0006    WRITED A 0007    WRLP1  C 0102    WRLP2  C 0105    

ASSEMBLY COMPLETE,   NO ERRORS
