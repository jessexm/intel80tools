:F1:asm80 disk2.asm print(disk2.lst) object(disk2.obj) DEBUG



ISIS-II 8080/8085 MACRO ASSEMBLER, V4.1         MODULE   PAGE    1


  LOC  OBJ         LINE        SOURCE STATEMENT

                      1         CSEG
                      2         public  dkstat  ; dk$stat
                      3         public  rtype   ; r$type
                      4         public  rbyte   ; r$byte
                      5         public  strtio  ; strt$io
                      6         extrn   dkcont  ; disk controller
                      7 
  F821                8 IOCDR1  equ     0F821h
  F841                9 IOCCOM  equ     0F841h
  F844               10 IOCDR2  equ     0F844h
                     11 
                     12 ; controller
  0000               13 NOCONT  equ     0
  0001               14 CONT1   equ     1
  0002               15 CONT2   equ     2
  0003               16 CONTIN  equ     3       ; integrated single density
  0004               17 CONTHD  equ     4
                     18 
                     19 ; and their IO port bases (ISD handled separately)
  0078               20 BASE1   equ     78h
  0088               21 BASE2   equ     88h
  0068               22 BASEHD  equ     68h
                     23 
                     24 
                     25 ; IOC INTERFACE COMMANDS
  00C1               26 IOCS    equ     0c1h            ; IOC INPUT DBB STATUS PORT
  00C1               27 IOCC    equ     0c1h            ; IOC OUTPUTY CONTROL COMMAND PORT
  00C0               28 IOCI    equ     0c0h            ; IOC INPUT DATA (FROM DBB) PORT
  00C0               29 IOCO    equ     0c0h            ; IOC OUTPUT DATA (TO DBB) PORT
  0004               30 F0      equ     00000100B       ; FLAG 0 - SLAVE IS BUSY, MASTER IS LOCKED OUT
  0002               31 IBF     equ     00000010B       ; SLAVE INPUT BUFFER IS FULL
  0001               32 OBF     equ     00000001B       ; SLAVE OUTPUT BUFFER IS FULL
  0015               33 WPBC    equ     15h             ; write parameter block command
  0016               34 WPCC    equ     16h             ; write parameter block command continuation
  0017               35 WDBC    equ     17h             ; write data block command
  0018               36 WDCC    equ     18h             ; reserved
  0019               37 RDBC    equ     19h             ; read data block command
  001A               38 RDCC    equ     1ah             ; reserved
  001B               39 RRSTS   equ     1bh             ; read result status command
  001C               40 RDSTS   equ     1ch             ; read device status command
                     41 
                     42 ; PSEUDO INTERRUPT INSTRUCTIONS
  000D               43 DISABL  equ     0dh             ; disable interrupts
  0005               44 ENABL   equ     05h             ; enable interrupts
  00FF               45 CPUC    equ     0ffh            ; port for these instructions
                     46 
                     47 ; DISK INSTRUCTIONS
  0001               48 SEEK    equ     1               ; seek instruction
  0002               49 FORMAT  equ     2               ; format instruction
  0003               50 RECAL   equ     3               ; recalibrate instruction
  0004               51 READ    equ     4               ; read data instruction
  0005               52 VERIFY  equ     5               ; verify crc instruction
  0006               53 WRITE   equ     6               ; write data instruction
  0007               54 WRITED  equ     7               ; write deleted data instruction


ISIS-II 8080/8085 MACRO ASSEMBLER, V4.1         MODULE   PAGE    2


  LOC  OBJ         LINE        SOURCE STATEMENT

                     55 
                     56 ; Layout of the I/O parameter block (IOPB)
                     57 ;       Only the first five bytes of the IOPB are transmitted to the ISD
                     58 ;       IOCW    BYTE    channel word
                     59 ;       IOINS   BYTE    diskette instruction
                     60 ;       NSEC    BYTE    number of sectors
                     61 ;       TADR    BYTE    track address
                     62 ;       SADR    BYTE    sector address
                     63 ;       BUF     ADDRESS buffer address
                     64 
  27BB 3AC807   E    65 dkstat: lda     dkcont
  27BE B7            66         ora     a
  27BF C8            67         rz                      ; not present
  27C0 FE04          68         cpi     CONTHD
  27C2 CADB27   C    69         jz      statHD          ; hard disk
  27C5 FE03          70         cpi     CONTIN
  27C7 C2D027   C    71         jnz     dkst1           ; jump if not isd
  27CA 061C          72         mvi     b, RDSTS        ; use bios to get ISD status
  27CC CD21F8        73         call    IOCDR1
  27CF C9            74         ret
                     75 
  27D0 FE02          76 dkst1:  cpi     CONT2
  27D2 C2D827   C    77         jnz     dkst2
  27D5 DB88          78         in      BASE2           ; controller 2
  27D7 C9            79         ret
                     80 
  27D8 DB78          81 dkst2:  in      BASE1           ; controller 1
  27DA C9            82         ret
                     83 
  27DB DB68          84 statHD: in      BASEHD
  27DD C9            85         ret
                     86 
                     87 
                     88 
                     89 
  27DE 3AC807   E    90 rtype:  lda     dkcont
  27E1 FE04          91         cpi     CONTHD          
  27E3 CAF827   C    92         jz      typeHD          ; hard disk
  27E6 FE03          93         cpi     CONTIN
  27E8 C2ED27   C    94         jnz     type1           ; jump if not isd
  27EB AF            95         xra     a       ; no result type for ISD
  27EC C9            96         ret
                     97 
  27ED FE02          98 type1:  cpi     CONT2
  27EF C2F527   C    99         jnz     type2
  27F2 DB89         100         in      BASE2 + 1       ; controller 2
  27F4 C9           101         ret
                    102 
  27F5 DB79         103 type2:  in      BASE1 + 1       ; controller 1
  27F7 C9           104         ret
                    105 
  27F8 DB69         106 typeHD: in      BASEHD + 1
  27FA C9           107         ret
                    108 
                    109 


ISIS-II 8080/8085 MACRO ASSEMBLER, V4.1         MODULE   PAGE    3


  LOC  OBJ         LINE        SOURCE STATEMENT

                    110 
                    111 rbyte:
  27FB 3AC807   E   112         lda     dkcont
  27FE FE04         113         cpi     CONTHD
  2800 CA1928   C   114         jz      byteHD          ; hard disk
  2803 FE03         115         cpi     CONTIN
  2805 C20E28   C   116         jnz     rbyte1          ; jump if not isd
  2808 061B         117         mvi     b, RRSTS        ; isd use bios
  280A CD21F8       118         call    IOCDR1
  280D C9           119         ret
                    120 
  280E FE02         121 rbyte1: cpi     CONT2
  2810 C21628   C   122         jnz     rbyte2
  2813 DB8B         123         in      BASE2 + 3       ; controller 2
  2815 C9           124         ret
                    125 
  2816 DB7B         126 rbyte2: in      BASE1 + 3       ; controller 1
  2818 C9           127         ret
                    128 
  2819 DB6B         129 byteHD: in      BASEHD + 3
  281B C9           130         ret
                    131 
                    132 
                    133 
  281C 3AC807   E   134 strtio: lda     dkcont
  281F FE04         135         cpi     CONTHD
  2821 CA4428   C   136         jz      strtHD          ; hard disk
  2824 FE03         137         cpi     CONTIN
  2826 C22D28   C   138         jnz     strt1           ; not isd
  2829 CD5328   C   139         call    isddr           ; use standard code
  282C C9           140         ret
                    141 
  282D FE02         142 strt1:  cpi     CONT2
  282F C23B28   C   143         jnz     strt2
  2832 79           144         mov     a, c            ; controller 2
  2833 D389         145         out     BASE2 + 1
  2835 78           146         mov     a, b
  2836 D38A         147         out     BASE2 + 2
  2838 C34A28   C   148         jmp     wait
                    149 
  283B 79           150 strt2:  mov     a, c            ; controller 1
  283C D379         151         out     BASE1 + 1
  283E 78           152         mov     a, b
  283F D37A         153         out     BASE1 + 2
  2841 C34A28   C   154         jmp     wait
                    155 
  2844 79           156 strtHD: mov     a, c            ; hard disk
  2845 D369         157         out     BASEHD + 1
  2847 78           158         mov     a, b
  2848 D36A         159         out     BASEHD + 2
                    160 
  284A CDBB27   C   161 wait:   call    dkstat          ; wait till i/o done
  284D E604         162         ani     4
  284F CA4A28   C   163         jz      wait
  2852 C9           164         ret


ISIS-II 8080/8085 MACRO ASSEMBLER, V4.1         MODULE   PAGE    4


  LOC  OBJ         LINE        SOURCE STATEMENT

                    165 
                    166 ; code is a direct lift from the Intellec series II interface document
                    167 
                    168 ;***************************************************************
                    169 ;* PROCEDURE NAME = ISDDR (IHTEGRATED SINGLE DENSITY DISK DRIVER)
                    170 ;* PROCESS: TRANSMIT THE IOPB; ONE BYTE AT A TIME, TO THE ISD
                    171 ;*          IF THE INSTRUCTION TO THE OISK IS A OATA TRAHSFER
                    172 ;*          (I E READ DATA, FORMAT, WRITE DATA, WRITE DELETED
                    173 ;*          DATA) THEN TRAHSFER THE DATA. ONE BYTE AT A TIME
                    174 ;*          TO/FROH THE ISD
                    175 ;* IHPUT:   B-REG COHTAIHS MSB OF IOPB
                    176 ;*          C-REG COHTAIHS LSB OF IOPB
                    177 ;* OUTPUT:  THE IOPB IS TRANSMITTED TO THE ISD DATA IS TRANSFERED
                    178 ;*          TO/FROM THE ISD AS REQUIRED
                    179 ;***************************************************************
                    180 
                    181 isddr:
  2853 C5           182         push    b               ; save the iopb
  2854 03           183         inx     b
  2855 0A           184         ldax    b               ; test ioins
  2856 FE04         185         cpi     READ
  2858 C28C28   C   186         jnz     isd1            ; jump if not read
  285B E1           187         pop     h               ; get the iobp
  285C E5           188         push    h               ; save again
  285D 23           189         inx     h
  285E 23           190         inx     h
  285F 56           191         mov     d, m            ; d = number of sectors
  2860 E1           192         pop     h
  2861 D5           193         push    d               ; save the number of sectors
  2862 CDE128   C   194         call    triopb          ; issue the command
  2865 23           195         inx     h               ; get the buffer address into hl
  2866 5E           196         mov     e, m
  2867 23           197         inx     h
  2868 56           198         mov     d, m
  2869 EB           199         xchg
  286A 0619         200         mvi     b, RDBC         ; issue the read data block command
  286C CD41F8       201         call    IOCCOM
  286F D1           202         pop     d               ; recover the number of sectors 
                    203 
                    204 rdlp1:
  2870 1E80         205         mvi     e, 128          ; read a sector (128 bytes)
                    206 
                    207 rdlp2:
  2872 DBC1         208         in      IOCS            ; wait for byte available
  2874 E607         209         ani     F0 or IBF or OBF
  2876 FE01         210         cpi     OBF             ; test for slave done; somethign for the master
  2878 C27228   C   211         jnz     rdlp2           ; loop until slave is ready
  287B DBC0         212         in      IOCI            ; get the byte from the DBB
  287D 77           213         mov     m, a            ; save to buffer
  287E 23           214         inx     h
  287F 1D           215         dcr     e               ; loop for one sector
  2880 C27228   C   216         jnz     rdlp2
  2883 15           217         dcr     d               ; loop for number of sectors
  2884 C27028   C   218         jnz     rdlp1
  2887 3E05         219         mvi     a, ENABL                ; enable interrupts


ISIS-II 8080/8085 MACRO ASSEMBLER, V4.1         MODULE   PAGE    5


  LOC  OBJ         LINE        SOURCE STATEMENT

  2889 D3FF         220         out     CPUC
  288B C9           221         ret
                    222         ;----------------------------------------------------------------------
                    223 isd1:                           ; here if not a read so test for
  288C FE02         224         cpi     FORMAT          ; FORMAT, WRITE pr WRITED 
  288E CA9B28   C   225         jz      isd2
  2891 FE06         226         cpi     WRITE
  2893 CA9B28   C   227         jz      isd2
  2896 FE07         228         cpi     WRITED
  2898 C2D428   C   229         jnz     isd3            ; must be a SEEK, RECALB or VERIFY
                    230 
                    231 isd2:
  289B E1           232         pop     h               ; recover iopb
  289C E5           233         push    h               ; save again
  289D 23           234         inx     h
  289E 7E           235         mov     a, m
  289F FE02         236         cpi     FORMAT
  28A1 23           237         inx     h
  28A2 CAA928   C   238         jz      isd2a           ; don't use sector count for format
  28A5 4E           239         mov     c, m            ; pick up sector count
  28A6 C3AB28   C   240         jmp     isd2b
                    241 
                    242 isd2a:
  28A9 0E01         243         mvi     c, 1            ; format has only single sector
                    244 
                    245 isd2b:
  28AB 23           246         inx     h
  28AC 23           247         inx     h
  28AD 23           248         inx     h
  28AE 5E           249         mov     e, m
  28AF 23           250         inx     h
  28B0 56           251         mov     d, m
  28B1 EB           252         xchg                    ; hl = buffer
  28B2 0617         253         mvi     b, WDBC         ; load wite data block command
  28B4 CD41F8       254         call    IOCCOM          ; output the command
  28B7 CDD928   C   255         call    iocrdy          ; wait till slave is idle
  28BA 79           256         mov     a, c            ; number of sectors to be written
  28BB D3C0         257         out     IOCO
                    258 
                    259 wrlp1:
  28BD F5           260         push    psw
  28BE 1680         261         mvi     d, 128          ; sector length
                    262 
                    263 wrlp2:
  28C0 CDD928   C   264         call    iocrdy          ; wait will slave is idle
  28C3 7E           265         mov     a, m            ; write the data byte
  28C4 D3C0         266         out     IOCO
  28C6 23           267         inx     h               ; advance buffer
  28C7 15           268         dcr     d
  28C8 C2C028   C   269         jnz     wrlp2
  28CB F1           270         pop     psw             ; number of sectors
  28CC 3D           271         dcr     a
  28CD C2BD28   C   272         jnz     wrlp1           ; loop till all written
  28D0 3E05         273         mvi     a, ENABL        ; enable interrupts
  28D2 D3FF         274         out     CPUC


ISIS-II 8080/8085 MACRO ASSEMBLER, V4.1         MODULE   PAGE    6


  LOC  OBJ         LINE        SOURCE STATEMENT

                    275 
                    276 isd3:
  28D4 E1           277         pop     h               ; hl = iopb
  28D5 CDE128   C   278         call    triopb          ; send the iopb
  28D8 C9           279         ret
                    280 
                    281 ;------
  28D9 DBC1         282 iocrdy: in      IOCS            ; get the status
  28DB E607         283         ani     F0 or OBF or IBF; look till ready
  28DD C2D928   C   284         jnz     iocrdy
  28E0 C9           285         ret
                    286 
                    287 ;***************************************************************
                    288 ;* Procedure name: TRIOPB (transmit IOPB to ISD)
                    289 ;* Process: Transmit the IOPB to the 8271 integrated single density
                    290 ;*          controller this procedure is called only bu procedure ISDDR
                    291 ;* Input: HL contains address of the IOPB
                    292 ;* Output: Transmit the IOPB
                    293 ;*         HL points to SADR of IOPB
                    294 ;* Modified: A, FLAGS, B, C, D, HL
                    295 ; *
                    296 ;***************************************************************
                    297 triopb:                         ; transfer$iopb$to$isd
  28E1 4E           298         mov     c, m            ; the iocw 
  28E2 0615         299         mvi     b, WPBC         ; issue first byte
  28E4 CD44F8       300         call    IOCDR2
  28E7 1604         301         mvi     d, 4            ; send the remaining 4 bytes
                    302 
                    303 trloop:
  28E9 23           304         inx     h               
  28EA 4E           305         mov     c, m
  28EB 0616         306         mvi     b, WPCC
  28ED CD44F8       307         call    IOCDR2
  28F0 15           308         dcr     d
  28F1 C2E928   C   309         jnz     trloop
                    310 
  28F4 CDBB27   C   311 trwait: call    dkstat          ; see if the bit indicating operation
  28F7 E604         312         ani     4               ; compete is set
  28F9 CAF428   C   313         jz      trwait          ; loop until done
  28FC C9           314         ret
                    315 
                    316         end;


PUBLIC SYMBOLS
DKSTAT C 0000    RBYTE  C 0040    RTYPE  C 0023    STRTIO C 0061    

EXTERNAL SYMBOLS
DKCONT E 0000    

USER SYMBOLS
BASE1  A 0078    BASE2  A 0088    BASEHD A 0068    BYTEHD C 005E    CONT1  A 0001    CONT2  A 0002    CONTHD A 0004    
CONTIN A 0003    CPUC   A 00FF    DISABL A 000D    DKCONT E 0000    DKST1  C 0015    DKST2  C 001D    DKSTAT C 0000    
ENABL  A 0005    F0     A 0004    FORMAT A 0002    IBF    A 0002    IOCC   A 00C1    IOCCOM A F841    IOCDR1 A F821    
IOCDR2 A F844    IOCI   A 00C0    IOCO   A 00C0    IOCRDY C 011E    IOCS   A 00C1    ISD1   C 00D1    ISD2   C 00E0    


ISIS-II 8080/8085 MACRO ASSEMBLER, V4.1         MODULE   PAGE    7


ISD2A  C 00EE    ISD2B  C 00F0    ISD3   C 0119    ISDDR  C 0098    NOCONT A 0000    OBF    A 0001    RBYTE  C 0040    
RBYTE1 C 0053    RBYTE2 C 005B    RDBC   A 0019    RDCC   A 001A    RDLP1  C 00B5    RDLP2  C 00B7    RDSTS  A 001C    
READ   A 0004    RECAL  A 0003    RRSTS  A 001B    RTYPE  C 0023    SEEK   A 0001    STATHD C 0020    STRT1  C 0072    
STRT2  C 0080    STRTHD C 0089    STRTIO C 0061    TRIOPB C 0126    TRLOOP C 012E    TRWAIT C 0139    TYPE1  C 0032    
TYPE2  C 003A    TYPEHD C 003D    VERIFY A 0005    WAIT   C 008F    WDBC   A 0017    WDCC   A 0018    WPBC   A 0015    
WPCC   A 0016    WRITE  A 0006    WRITED A 0007    WRLP1  C 0102    WRLP2  C 0105    

ASSEMBLY COMPLETE,   NO ERRORS
