PL/M-80 COMPILER                                                                                                PAGE   1


ISIS-II PL/M-80 V4.0 COMPILATION OF MODULE RESCAN
OBJECT MODULE PLACED IN RESCAN.OBJ
COMPILER INVOKED BY:  :F1:plm80 rescan.plm PRINT(RESCAN.LST) OBJECT(RESCAN.OBJ) DEBUG OPTIMIZE CODE



   1          rescan:
              DO;
        
              $include(rescan.ipx)
   2   1  =   declare Aft$Window literally 'AWindo';
   3   1  =   declare CANT$RESCAN literally '21';
   4   1  =   declare a$edit$p address external;
   5   1  =   declare a$lbuf$p address external;
   6   1  =   Aft$Window: procedure(slot$number) external; declare slot$number byte; end;
   9   1  =   warn: procedure(errcode) external; declare errcode byte; end;
  12   1  =   declare a$edit based a$edit$p  byte;
  13   1  =   declare a$lbuf based a$lbuf$p  address;
        
  14   1      rescan: PROCEDURE(aftn) PUBLIC;
                                                 ; STATEMENT # 14
                         ; PROC  RESCAN
           15E4  21D62D          LXI     H,AFTN
           15E7  71              MOV     M,C
  15   2          DECLARE aftn BYTE;
  16   2          DECLARE temp ADDRESS, bytes BASED temp(128) BYTE,
                                addr BASED temp(64) ADDRESS;
        
  17   2          call aft$window(aftn);
                                                 ; STATEMENT # 17
           15E8  2AD62D          LHLD    AFTN
           15EB  4D              MOV     C,L
           15EC  CDA702          CALL    AWINDO
  18   2          temp = a$lbuf;
                                                 ; STATEMENT # 18
           15EF  2AD22A          LHLD    ALBUFP
           15F2  5E              MOV     E,M
           15F3  23              INX     H
           15F4  56              MOV     D,M
           15F5  EB              XCHG
           15F6  22D72D          SHLD    TEMP
  19   2          if a$edit <> 0 AND NOT bytes(125) then
                                                 ; STATEMENT # 19
           15F9  2AD02A          LHLD    AEDITP
           15FC  7E              MOV     A,M
           15FD  D600            SUI     0H
           15FF  C6FF            ADI     255
           1601  9F              SBB     A
           1602  017D00          LXI     B,7DH
           1605  2AD72D          LHLD    TEMP
           1608  09              DAD     B
           1609  F5              PUSH    PSW     ; 1
           160A  7E              MOV     A,M
           160B  2F              CMA
           160C  C1              POP     B       ; 1
           160D  48              MOV     C,B
           160E  A1              ANA     C
PL/M-80 COMPILER                                                                                                PAGE   2


           160F  1F              RAR
           1610  D22316          JNC     @1
  20   2              addr(63) = 0;   /* lptr = 0, lptr = false */
                                                 ; STATEMENT # 20
           1613  017E00          LXI     B,7EH
           1616  2AD72D          LHLD    TEMP
           1619  09              DAD     B
           161A  3E00            MVI     A,0H
           161C  77              MOV     M,A
           161D  23              INX     H
           161E  3600            MVI     M,0
           1620  C32816          JMP     @2
                         @1:
                  else
  21   2              call warn(CANT$RESCAN);
                                                 ; STATEMENT # 21
           1623  0E15            MVI     C,15H
           1625  CD510B          CALL    WARN
                         @2:
  22   2      end;
                                                 ; STATEMENT # 22
           1628  C9              RET
  23   1      end;
              eof



MODULE INFORMATION:

     CODE AREA SIZE     = 0045H     69D
     VARIABLE AREA SIZE = 0003H      3D
     MAXIMUM STACK SIZE = 0002H      2D
     27 LINES READ
     0 PROGRAM ERRORS

END OF PL/M-80 COMPILATION
