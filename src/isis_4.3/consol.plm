consol:
DO;
$include(consol.ipx)

DECLARE cur$consol$in  (12) BYTE PUBLIC,
	cur$consol$out (12) BYTE PUBLIC;

DECLARE	cold$consol$in(5)  BYTE INITIAL(':XI: '),
	cold$consol$out(5) BYTE INITIAL(':XO: ');

DECLARE	cold$start$flag BOOLEAN INITIAL (TRUE);

DECLARE (cold$cidev, alt$cidev) BYTE PUBLIC;

console: PROCEDURE(infile, outfile) PUBLIC;
	DECLARE (infile, outfile) ADDRESS;
	DECLARE instring based infile BYTE,
		outstring based outfile BYTE;
	DECLARE temp BYTE;
	DECLARE tdrv(2) BYTE DATA ('TV');	/* T or V is 1st letter of device name */
	DECLARE initio BYTE AT (6);

	if cold$start$flag then
	do;
	  cold$consol$in(1), cold$consol$out(1) = tdrv(initio and 1);
	  infile = .cold$consol$in;
	  outfile = .cold$consol$out;
	end;
	
	global$severity = ABORT;
	call xpath(outfile, .pn);
	if pn(0) <> CODEV then
	do;
	  call close(AFTN$CONSOL$OUT);
	  temp = open(outfile, WRITE$MODE, FALSE);
	  call xpath(outfile, .cur$consol$out);
	end;
	call xpath(infile, .pn);
	if pn(0) <> CIDEV then 
	do;
	  call close(AFTN$CONSOL$IN);
	  temp = open(infile, READ$MODE, 100h);
	  if cold$start$flag then
	    cold$cidev = aft(AFTN$CONSOL$IN).device;
	  alt$cidev = cold$cidev;
	  call xpath(infile, .cur$consol$in);
	end;
	cold$start$flag = FALSE;
end;


whocon:	PROCEDURE(aftn, bufferloc) PUBLIC;
	DECLARE aftn BYTE;
	DECLARE bufferloc ADDRESS;
	DECLARE nameloc ADDRESS;

	nameloc = .cur$consol$out;
	if aftn then
	do;
	  if (aftn := aft(AFTN$CONSOL$IN).device) <> cur$consol$in(0) then
	    nameloc = .aftn;
	  else
	    nameloc = .cur$consol$in;
	end;
	call unpath(nameloc, bufferloc);
end;
end;
eof
