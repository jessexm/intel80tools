num2Asc: DO;

DECLARE hexdigits(*) BYTE DATA('0123456789ABCDEF');
DECLARE numsuffix(*) BYTE DATA('BXXXXXQXDXXXXXH');


$include(:f3:movmem.aex)
$include(:f3:fill.aex)

num2Asc: PROCEDURE(num, width, radix, buf$p) BYTE PUBLIC;
	DECLARE num ADDRESS, width BYTE, radix BYTE, buf$p ADDRESS;
	DECLARE buf(18) BYTE;
	DECLARE padch BYTE, fmt BYTE, j BYTE, lwidth BYTE,
	tmp BYTE, firstch BYTE, i BYTE;

	padch = ' ';
	if width > 7FH then
	do;
		padch = '0';
		width = -width;
	end;
	if width = 0 then
		lwidth = 16;
	else if width > 16 then
		lwidth = 16;
	else
		lwidth = width;
	fmt = 0;
	if radix > 7FH then
	do;
		fmt = 0FFH;
		radix = -radix;
	end;
	if radix > 16 then
		radix = 16;
	tmp = 16;
	firstch = tmp - lwidth + 1;
	call fill(lwidth, .buf(firstch), padch);
	i = lwidth;
	j = 16;
	do while i <> 0;
		buf(j) = hexdigits(num mod radix);
		if (num := num / radix) = 0 then
			i = 0;
		else
		do;
			i = i - 1;
			j = j - 1;
		end;
	end;
	if width = 0 then
	do;
		if fmt then
			if buf(j) > '9' then
			do;
				j = j - 1;
				buf(j) = '0';
			end;
		lwidth = 17 - (firstCh := j);
	end;
	if fmt then
	do;
		lwidth = lwidth + 1;
		buf(17) = numsuffix(radix - 2);
	end;
	call movmem(lwidth, .buf(firstCh), buf$p);
	return lwidth;
end num2Asc;
end;
