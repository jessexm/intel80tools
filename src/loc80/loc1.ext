DECLARE	VERSION (1) BYTE EXTERNAL ;
DECLARE	(readfd, outputfd, printfd, tmpfd, statusIO, actRead) ADDRESS EXTERNAL,
	inFileName (16) BYTE EXTERNAL, outFileName (16) BYTE EXTERNAL,
	printFileName (16) BYTE EXTERNAL, tmpFileName (16) BYTE EXTERNAL,
	columns BYTE EXTERNAL,
	seen(9) BYTE EXTERNAL,	/* START, STACK, RESTART0, MAP, PUBLICS, SYMBOLS, LINES, PURGE, NAME */
	nameArg(32) BYTE EXTERNAL,
	type4SubType BYTE EXTERNAL,
	modhdr$x1 BYTE EXTERNAL,
	modhdr$x2 BYTE EXTERNAL,
	startAddr ADDRESS EXTERNAL,
	segOrder(255) BYTE EXTERNAL,
	segBases (3) ADDRESS EXTERNAL,	/* abs, code, data */
	stackAddr ADDRESS EXTERNAL,
	MemoryBase(252) ADDRESS EXTERNAL,
	segSizes(3) ADDRESS EXTERNAL,
	stackSize ADDRESS EXTERNAL,
	MemorySize(252) ADDRESS EXTERNAL,
	segFlags(256) BYTE EXTERNAL,
	srec$p ADDRESS EXTERNAL,
	erec$p ADDRESS EXTERNAL,
	rec$p ADDRESS EXTERNAL,
	recNum ADDRESS EXTERNAL,
	recLen ADDRESS EXTERNAL,
	npbuf ADDRESS EXTERNAL,
	sibuf$p ADDRESS EXTERNAL,
	ibuf$p ADDRESS EXTERNAL,
	eibuf$p ADDRESS EXTERNAL,
	sout$p ADDRESS EXTERNAL,
	out$p ADDRESS EXTERNAL,
	eout$p ADDRESS EXTERNAL,
	spbuf$p ADDRESS EXTERNAL,
	pbuf$p ADDRESS EXTERNAL,
	epbuf$p ADDRESS EXTERNAL,
	topHeap ADDRESS EXTERNAL,
	topDescriptor ADDRESS EXTERNAL,
	curDescriptor62F ADDRESS EXTERNAL,
	desc6a$p ADDRESS EXTERNAL,
	botHeap ADDRESS EXTERNAL,
	curDescriptor ADDRESS EXTERNAL,
	desc4a$p ADDRESS EXTERNAL,
	t6desc4 DESC4$T EXTERNAL,
	usePrintBuf BYTE EXTERNAL,
	isNotBB BYTE EXTERNAL,
	baseMemImage ADDRESS EXTERNAL,
	havePagingFile BYTE EXTERNAL,
	pageCacheSize BYTE EXTERNAL,
	roundRobinIndex BYTE EXTERNAL,
	nxtPageNo BYTE EXTERNAL,
	pageIndexTmpFil BYTE EXTERNAL,
	pageTab1$p ADDRESS EXTERNAL,
	pageTab2$p ADDRESS EXTERNAL;
DECLARE	crlf(2) BYTE EXTERNAL,
	aRecordType(1) BYTE EXTERNAL,
	(inBlk, inByt) ADDRESS EXTERNAL,
	inb$p ADDRESS EXTERNAL,
	inCRC BYTE EXTERNAL;

conStrOut: PROCEDURE(buf, cnt) EXTERNAL;
	DECLARE (buf, cnt) ADDRESS;
END conStrOut;

fatalErr: PROCEDURE(errCode) EXTERNAL;
	DECLARE errCode BYTE;
END fatalErr;

illegalRecord: PROCEDURE EXTERNAL;
END illegalRecord;

illegalReloc: PROCEDURE EXTERNAL;
END illegalReloc;

badRecordSeq: PROCEDURE EXTERNAL;
END badRecordSeq;

pstrcpy: PROCEDURE(psrc, pdst) EXTERNAL;
	DECLARE (psrc, pdst) ADDRESS;
END pstrcpy;

printString: PROCEDURE(bufp, cnt) EXTERNAL;
	DECLARE bufp ADDRESS;
	DECLARE cnt ADDRESS;
END printString;

printcrlf: PROCEDURE EXTERNAL;
END printcrlf;

conAndPrint: PROCEDURE(buf, cnt) EXTERNAL;
	DECLARE (buf, cnt) ADDRESS;
END conAndPrint;

chkRead: PROCEDURE(cnt) EXTERNAL;
	DECLARE cnt ADDRESS;
END chkRead;

getRecord: PROCEDURE EXTERNAL;
END getRecord;

iseek: PROCEDURE(blk, byt) EXTERNAL;
	DECLARE (blk, byt) ADDRESS;
END iseek;


RAddr2LAddr: PROCEDURE(addr) ADDRESS EXTERNAL;
	DECLARE addr ADDRESS;
END RAddr2LAddr;


insert6Desc: PROCEDURE(flags, seg, start, len) EXTERNAL;
	DECLARE (flags, seg) BYTE;
	DECLARE (start, len) ADDRESS;
END insert6Desc;

insert4Desc: PROCEDURE(arg1w, arg2w) EXTERNAL;
	DECLARE arg1w ADDRESS;
	DECLARE arg2w ADDRESS;
END insert4Desc;

loadMODDAT: PROCEDURE(arg1b) EXTERNAL;
	DECLARE arg1b BYTE;
END loadMODDAT;

