DECLARE	cmdch BASED cmd$p BYTE;
DECLARE	cmdbuf BASED cmd$p (1) BYTE;
DECLARE	pageTab1 BASED pageTab1$p (1) STRUCTURE (state BYTE, mpage BYTE);
DECLARE	pageTab2 BASED pageTab2$p (1) STRUCTURE (state BYTE, fpage BYTE);
DECLARE	srec BASED srec$p STRUCTURE (type BYTE, len ADDRESS, rec(1) BYTE);
DECLARE	sout BASED sout$p STRUCTURE (type BYTE, len ADDRESS, rec(1) BYTE);
DECLARE	modendRec BASED rec$p STRUCTURE (subtype BYTE, segtype BYTE, addr ADDRESS);
DECLARE	modendOut BASED out$p STRUCTURE (subtype BYTE, segtype BYTE, addr ADDRESS);
DECLARE	moddatRec BASED rec$p STRUCTURE (seg BYTE, addr ADDRESS, bytes(1) BYTE);
DECLARE	moddatOut BASED out$p STRUCTURE (seg BYTE, addr ADDRESS, bytes(1) BYTE);
DECLARE	linnumARec BASED rec$p STRUCTURE (seg BYTE);
DECLARE	linnumBRec BASED rec$p STRUCTURE (addr ADDRESS, line ADDRESS);
DECLARE	linnumAOut BASED out$p STRUCTURE (seg BYTE);
DECLARE	linnumBOut BASED out$p STRUCTURE (addr ADDRESS, line ADDRESS);
DECLARE defsARec BASED rec$p STRUCTURE (seg BYTE);
DECLARE defsBRec BASED rec$p STRUCTURE (offset ADDRESS, name(1) BYTE /*, 0 */);
DECLARE defsAOut BASED out$p STRUCTURE (seg BYTE);
DECLARE defsBOut BASED out$p STRUCTURE (offset ADDRESS, name(1) BYTE /*, 0 */);
DECLARE extnamRec BASED rec$p STRUCTURE (name(1) BYTE /*, 0 */);
DECLARE extnamOut BASED out$p STRUCTURE (name(1) BYTE /*, 0 */);
DECLARE	fixextARec BASED rec$p STRUCTURE (fixType BYTE);
DECLARE	fixextAOut BASED out$p STRUCTURE (fixType BYTE);
DECLARE	fixextBRec BASED rec$p STRUCTURE (sym ADDRESS, addr ADDRESS);
DECLARE	fixextBOut BASED out$p STRUCTURE (sym ADDRESS, addr ADDRESS);
DECLARE	fixlocARec BASED rec$p STRUCTURE (fixType BYTE);
DECLARE	fixlocBRec BASED rec$p STRUCTURE (addr ADDRESS);
DECLARE	fixsegARec BASED rec$p STRUCTURE (seg BYTE);
DECLARE	comdefRec BASED rec$p STRUCTURE (seg BYTE, name(1) BYTE);
