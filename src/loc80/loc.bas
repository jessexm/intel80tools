DECLARE	cmdch BASED cmd$p BYTE;
DECLARE	cmdbuf BASED cmd$p (1) BYTE;
DECLARE	pageTab1 BASED pageTab1$p (1) STRUCTURE (state BYTE, mpage BYTE);
DECLARE	pageTab2 BASED pageTab2$p (1) STRUCTURE (state BYTE, fpage BYTE);
DECLARE	srec BASED srec$p STRUCTURE (type BYTE, len ADDRESS, rec(1) BYTE);
DECLARE	sout BASED sout$p STRUCTURE (type BYTE, len ADDRESS, rec(1) BYTE);
DECLARE	t4rec BASED rec$p STRUCTURE (subtype BYTE, segtype BYTE, addr ADDRESS);
DECLARE	t4out BASED out$p STRUCTURE (subtype BYTE, segtype BYTE, addr ADDRESS);
DECLARE	t6rec BASED rec$p STRUCTURE (seg BYTE, addr ADDRESS, bytes(1) BYTE);
DECLARE	t6out BASED out$p STRUCTURE (seg BYTE, addr ADDRESS, bytes(1) BYTE);
DECLARE	t8arec BASED rec$p STRUCTURE (seg BYTE);
DECLARE	t8brec BASED rec$p STRUCTURE (addr ADDRESS, line ADDRESS);
DECLARE	t8aout BASED out$p STRUCTURE (seg BYTE);
DECLARE	t8bout BASED out$p STRUCTURE (addr ADDRESS, line ADDRESS);
DECLARE t12arec BASED rec$p STRUCTURE (seg BYTE);
DECLARE t12brec BASED rec$p STRUCTURE (offset ADDRESS, name(1) BYTE /*, 0 */);
DECLARE t12aout BASED out$p STRUCTURE (seg BYTE);
DECLARE t12bout BASED out$p STRUCTURE (offset ADDRESS, name(1) BYTE /*, 0 */);
DECLARE t16arec LITERALLY 't12arec';
DECLARE t16brec LITERALLY 't12brec';
DECLARE t16aout LITERALLY 't12aout';
DECLARE t16bout LITERALLY 't12bout';
DECLARE t18rec BASED rec$p STRUCTURE (name(1) BYTE /*, 0 */);
DECLARE t18out BASED out$p STRUCTURE (name(1) BYTE /*, 0 */);
DECLARE	t20arec BASED rec$p STRUCTURE (fixType BYTE);
DECLARE	t20aout BASED out$p STRUCTURE (fixType BYTE);
DECLARE	t20brec BASED rec$p STRUCTURE (sym ADDRESS, addr ADDRESS);
DECLARE	t20bout BASED out$p STRUCTURE (sym ADDRESS, addr ADDRESS);
DECLARE	t22arec BASED rec$p STRUCTURE (fixType BYTE);
DECLARE	t22brec BASED rec$p STRUCTURE (addr ADDRESS);
DECLARE	t24arec BASED rec$p STRUCTURE (seg BYTE);
DECLARE	t2Erec BASED rec$p STRUCTURE (seg BYTE, name(1) BYTE);
